#!/bin/bash
. mtl-funcs

showUsage() {
    cat <<EOF
Usage: 
cat doc ~ cats a document last store point
cat doc done
cat doc todo
cat doc to doc2
cat doc done to doc2
cat doc todo to doc2
cat doc:1 todo to doc2
EOF
}

if [ $# -gt 0 ]; then
    DOCNM=$(resolvedoc $1)
    DOC=$(getdocname $DOCNM)
    BLOB=$(getblob "$DOCNM" 1)
    
    if [[ $BLOB != "" ]]; then
	CMD="cat .mtl/d/$BLOB"
	shift
	if [ $# -gt 0 ]; then # many of these should improve by real parser or just better greps + awk for cleaning titles
	    if [ $1 == "todo" ]; then
		CMD="$CMD | grep -v '\(^[[:space:]]*\)\(+\|\*\|^\^\|^¨\)'"
		shift
	    elif [ $1 == "todonow" ]; then
		CMD="$CMD | grep -v '\(^[[:space:]]*\)\(+\|\*\|^\^\|^¨\)'"
		shift
	    elif [ $1 == "done" ]; then
		CMD="$CMD | grep -v '\(^[[:space:]]*\)\(^\-\|^\~\|^\*\)'"
		shift
	    elif [ $1 == "notes" ]; then
		CMD="$CMD | grep -v '\(^[[:space:]]*\)\(^\-\|^\~\|^\+\)'"
		shift
	    elif [ $1 == "urgent" ]; then
		CMD="$CMD | grep '!!'"
		shift
	    elif [ $1 == "tags" ]; then
		CMD="$CMD | grep '\:'"
		shift
	    elif [ $1 == "peers" ]; then
		CMD="$CMD | grep '@'"
		shift
	    elif [ $1 == "clients" ]; then
		CMD="$CMD | grep '\$'" #todo doesn't work
		shift
	    elif [ $1 == "find" ]; then
		CMD="$CMD | grep '$2'"
		shift
		shift
	    fi
	fi
	if [ $# -gt 1 ] && [ "$1" == "to" ]; then
	    DOC2=$(getdoc $2)
	    echo "$DOC --> $DOC2"
	    CMD="$CMD > .mtl/${DOC2}"
	    echo "$BLOB" > .mtl/${DOC2}.src
	fi
	
	if [ "$CMD" == "" ]; then 
	    showUsage
	else
	#echo "$CMD"
	    eval "$CMD"
	fi
    else
	echo "err: no index file, try the ~w option"
    fi
else
    showUsage
fi